%this is a matlab .m file

%选取的对应点(使用control point selcetion tool完成)
fixedPoints=[926.000000000000,2294.00000000000;2222,2096.00000000000;2648,698.000000000000;1275.50000000000,1643.50000000000;1209.50000000000,981.499999999999;1975.50000000000,1083.50000000000;2743.50000000000,1833.50000000000];
movingPoints=[500.572796934866,1756.34051724138;1804.19683908046,1904.41139846743;2568.42205459770,662.862787356321;997.858117816092,1225.06465517241;1105.10337401292,569.170854271357;1815.20210727969,863.913314176245;2364.34877873563,1787.26652298851];

%读取图片数据
imgA=imread('Image A.jpg');
imgB=imread('Image B.jpg');

%将选取的对应点转换为矩阵P和Q
Q=zeros(3,size(movingPoints,1));
P=zeros(3,size(fixedPoints,1));
Q(1:2,1:size(P,2))=movingPoints';
Q(3,:)=1;
P(1:2,1:size(Q,2))=fixedPoints';
P(3,:)=1;

%最小二乘法获得变换矩阵H和H逆
H=Q*P'/(P*P');
invH=eye(size(H,1))/H;

%由于直接变换后发现图像超出左上边界，所以在变换之前先对坐标进行一个平移变换
plt=H*[0 0 1]';
prt=H*[0 size(imgB,2) 1]';
tx=-prt(1)+1;
ty=-plt(2)+1;

%图像配准
out=zeros(size(imgA,1),size(imgA,2),size(imgA,3));  %输出图像
for i=1:size(out,1)
    for j=1:size(out,2)
        ord=invH*([i-1 j-1 1]/[1 0 0;0 1 0;tx ty 1])';  %求取配准后的图像对应于原始图像的坐标
        x0=round(ord(1))+1;     %像素点的值使用最近邻的方式选取
        y0=round(ord(2))+1;
        if(x0>=1&&x0<=size(imgB,1)&&y0>=1&&y0<=size(imgB,2))
            out(i,j,:)=imgB(x0,y0,:);   %对原始图像范围内的点进行最近邻插值
        else
            out(i,j,:)=0;   %对原始图像范围外的点保持黑色
        end
    end
end

imwrite(out./255,'registration.jpg');   %保存结果

%显示结果
subplot(1,2,1);
imshow(out./255);
title('配准后的图像');
subplot(1,2,2);
imshow(imgA);
title('参考图像');